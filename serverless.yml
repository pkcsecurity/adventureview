# https://serverless.com/framework/docs/

plugins:
  - serverless-dynamodb-local
  - serverless-offline

service: adventureview

custom:
  tableName: "adventureview"
  dynamodb:
    start:
      migrate: true

# The `provider` block defines where your service will be deployed
provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-west-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn"] }
  environment:
    USERS_TABLE: ${self:custom.tableName}

# The `functions` block defines what code to deploy
functions:
  app:
    handler: app.handler
    events:
      - http: ANY /
      - http: "ANY {proxy+}"

resources:
  Resources:
    UsersDynamoDBTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10
        TableName: ${self:custom.tableName}
    ApiGatewayRestApi:
      Type: AWS::ApiGateway::RestApi
      Properties:
        BinaryMediaTypes:
          - "image/*"
